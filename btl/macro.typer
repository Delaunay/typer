

block_   : (List Sexp) -> Sexp;
block_   = Built-in block_;

symbol_  : String      -> Sexp;
symbol_  = Built-in symbol_;

string_  : String      -> Sexp;
string_  = Built-in string_;

node_    : (List Sexp) -> Sexp;
node_    = Built-in node_;

integer_ : Int         -> Sexp;
integer_ = Built-in integer_;

Macro : Type;
Macro = inductive_ (dMacro) (Macro_ Type);
Macro_ = inductive-cons Macro Macro_;


%% Basic usage
%
%   sqr = (Macro_
%       (node_ (symbol_ "lambda_->_") (symbol "x")
%           (node_ "_*_" (symbol "x") (symbol "x"))));
%
%   (sqr 4); % <=>  4 * 4
%
%
%% Using Quasi Quote `
%
%   sqr = (Macro_ (qq (lambda x -> ,x * ,x)));
%
%   (sqr 4); % <=>  4 * 4
