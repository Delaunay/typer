%
%   The Hardcore way of building a Macro
%

sqr_fun = node_ (symbol_ "lambda_->_") (symbol_ "x")
    (node_ (symbol_ "_*_") (symbol_ "x") (symbol_ "x"));

sqr_type = node_ (symbol_ "_->_") (symbol_ "Int") (symbol_ "Int");

give_type : Sexp -> Sexp -> Sexp;
give_type = lambda expr ->
    lambda tp ->
        node_ (symbol_ "_:_") expr tp;

sqr = Macro_ (give_type sqr_fun sqr_type);

m1 = (sqr 2);

%
%   The easy way
%


sqr = Macro_ (qq (lambda (x : Int) -> x * x));

m2 = (sqr 2);

%
%   Use unquote to replace a variable by its value
%

my_fun = let a = 2 in
    Macro_ (qquote lambda (x : Int) -> x * (uquote a));

main = (my_fun 3);